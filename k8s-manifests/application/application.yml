apiVersion: v1
kind: ConfigMap
metadata:
  name: student-api-config
  namespace: student-api
data:
  APP_ENV: production
  DB_HOST: student-db
  DB_NAME: students
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: student-api-secrets
  namespace: student-api
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: student-api-secret
  data:
    - secretKey: DB_USER
      remoteRef:
        key: secret/student-db
        property: username
    - secretKey: DB_PASSWORD
      remoteRef:
        key: secret/student-db
        property: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: student-api
  namespace: student-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: student-api
  template:
    metadata:
      labels:
        app: student-api
    spec:
      nodeSelector:
        type: application
      ## ✅ Init container for DB migration
      initContainers:
        - name: db-migration
          image: dipakrasal2009/sre_bootcamp3-api1:latest   # ✅ Using same API image
          command: ["/bin/sh","/app/entrypoint.sh"] # ✅ Change this to your migration command
          envFrom:
            - configMapRef:
                name: student-api-config
            - secretRef:
                name: student-api-secret
      ## ✅ Main API container
      containers:
        - name: student-api
          image: dipakrasal2009/sre_bootcamp3-api1:latest
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: student-api-config
            - secretRef:
                name: student-api-secret
---
apiVersion: v1
kind: Service
metadata:
  name: student-api-service
  namespace: student-api
spec:
  type: NodePort
  selector:
    app: student-api
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30080

